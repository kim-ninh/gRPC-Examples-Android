plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.google.protobuf'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

//    protobuf(project(":protos"))
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2")
    api "com.google.protobuf:protobuf-javalite:3.13.0"
    api "io.grpc:grpc-kotlin-stub-lite:1.0.0"
}


protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.13.0' }
    plugins {
        java {artifact = "io.grpc:protoc-gen-grpc-java:1.32.1"}
        grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.32.1'}
        grpckt {artifact = 'io.grpc:protoc-gen-grpc-kotlin:1.0.0:jdk7@jar'}

    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                java {
                    option 'lite'
                }
                grpc { // Options added to --grpc_out
                    option 'lite'
                }

                grpckt {
                    option 'lite'
                }
            }
        }
    }
}